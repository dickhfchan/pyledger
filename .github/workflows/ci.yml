name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.12, 3.13]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run accounting tests
      run: |
        python -m pyledger.accounting_tests
    
    - name: Run database tests
      run: |
        python -m pyledger.test_db
    
    - name: Run MCP tests
      run: |
        python -m pyledger.test_mcp
    
    - name: Run core functionality tests
      run: |
        python -m pyledger.test_pyledger
    
    - name: Test CLI functionality
      run: |
        python -m pyledger.main db-init
        python -m pyledger.main db-list-accounts
    
    - name: Test API startup
      run: |
        timeout 10s uvicorn pyledger.api:app --host 127.0.0.1 --port 8000 || true 